{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"init",
				"initJSONCritter"
			],
			[
				"Point",
				"PointCloud"
			],
			[
				"for",
				"forEach"
			],
			[
				"intoT",
				"intoTheVoid"
			],
			[
				"noI",
				"noUiSlider"
			],
			[
				"upd",
				"updateProjectionMatrix"
			],
			[
				"lin",
				"linesGroup"
			],
			[
				"show",
				"showPaths"
			],
			[
				"halo_",
				"halo_period"
			],
			[
				"intoThe",
				"intoTheAbyss"
			],
			[
				"get",
				"getControlPointsArray"
			],
			[
				"prev",
				"prevTarget"
			],
			[
				"y",
				"y_min"
			],
			[
				"halo",
				"haloData"
			],
			[
				"line",
				"lineMesh"
			],
			[
				"sdf",
				"sdfPosition"
			],
			[
				"sdfGet",
				"sdfGetAcceleration"
			],
			[
				"setM",
				"setMinMaxRange"
			],
			[
				"vtkStr",
				"vtkStructuredGrid"
			],
			[
				"initS",
				"initStreamlines	function"
			],
			[
				"sdfP",
				"sdfPhi	statement"
			],
			[
				"fi",
				"filename	statement"
			],
			[
				"Parti",
				"particle_index"
			],
			[
				"except",
				"Exception	class"
			],
			[
				"rand",
				"random	statement"
			],
			[
				"Get",
				"GetPointData"
			],
			[
				"__m",
				"__setMapper	function"
			],
			[
				"gmaen",
				"gmean"
			],
			[
				"fo",
				"following"
			],
			[
				"sub",
				"Subvolume"
			],
			[
				"process",
				"processess"
			],
			[
				"try",
				"try	Try/Except"
			],
			[
				"Sca",
				"SCALA_HOME"
			],
			[
				"scalar",
				"scalar_range	statement"
			],
			[
				"nL",
				"nLon	param"
			],
			[
				"data",
				"data_at_comp_pos"
			],
			[
				"NetCDF",
				"netCDF4"
			],
			[
				"outline",
				"outlineActor"
			],
			[
				"text",
				"textShape	statement"
			],
			[
				"Ky",
				"Kyle_MPRAGE"
			],
			[
				"lat",
				"latitude"
			],
			[
				"long",
				"longitude"
			],
			[
				"Adj",
				"AdjMatrix"
			],
			[
				"la",
				"layerGroups"
			],
			[
				"layerGrou",
				"layerGroupName"
			],
			[
				"proto",
				"prototype"
			],
			[
				"start",
				"startCity"
			],
			[
				"brea",
				"breadthFirstSearch"
			],
			[
				"ve",
				"vertex"
			],
			[
				"num",
				"numNodes"
			],
			[
				"lev",
				"Level"
			],
			[
				"level",
				"printLevelSpacingStart"
			],
			[
				"heap",
				"heaplvl5"
			],
			[
				"hea",
				"heaplvl5"
			],
			[
				"cur",
				"curLvl"
			],
			[
				"Clou",
				"Cloud-Rain"
			],
			[
				"cit",
				"cityName"
			],
			[
				"elas",
				"elapsedArray"
			],
			[
				"clac",
				"calculateTimeNode"
			],
			[
				"ela",
				"elapsedNode"
			],
			[
				"qu",
				"quantity"
			],
			[
				"quan",
				"quantities"
			],
			[
				"cla",
				"calculateTimeArray"
			],
			[
				"inser",
				"insertNode"
			],
			[
				"star",
				"startTime"
			],
			[
				"clock",
				"clock_t"
			],
			[
				"begin",
				"beginTime"
			],
			[
				"time",
				"time_t"
			],
			[
				"p",
				"pNodes"
			],
			[
				"tre",
				"treeNode"
			],
			[
				"con",
				"console"
			],
			[
				"comm",
				"community"
			],
			[
				"F",
				"FarNorthSide"
			],
			[
				"if",
				"ife	if â€¦ else"
			],
			[
				"Sout",
				"SouthSide"
			],
			[
				"West",
				"WestSide"
			],
			[
				"read",
				"readlines	function"
			],
			[
				"po",
				"position"
			],
			[
				"poin",
				"pointLight"
			],
			[
				"Po",
				"pointLight"
			],
			[
				"sp",
				"sphereMaterial"
			],
			[
				"base",
				"buildDataset"
			],
			[
				"Freq",
				"FreqDist"
			],
			[
				"pre",
				"preprocessing"
			],
			[
				"classif",
				"classification"
			],
			[
				"constru",
				"constructFeatureIndex"
			],
			[
				"filt",
				"filterFeatureFrequency"
			],
			[
				"feature",
				"featureDist"
			],
			[
				"token",
				"tokenNegation"
			],
			[
				"twi",
				"twokenizer"
			],
			[
				"emoji",
				"emojiRE"
			],
			[
				"class",
				"class	class"
			],
			[
				"cc",
				"cc	shortcut - case class"
			],
			[
				"case",
				"case	case"
			],
			[
				"useCl",
				"useCluster4"
			],
			[
				"def",
				"define"
			],
			[
				"pr",
				"prn-str"
			],
			[
				"prn",
				"prn-str"
			],
			[
				"stim",
				"stimListPath"
			]
		]
	},
	"buffers":
	[
		{
			"file": "demos/index.html",
			"settings":
			{
				"buffer_size": 11941,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Use a system based on Time, having a Time-Until-Penalty period.\n    Use the THREE.Clock() object that checks the current machine time. \n\n\n    Fitness/TimeToPenalty: A Constant Value that determines the Base \"Fitness\" \n                           of a Critter. This value represents a pool of time \n                           until the Critter takes a penalty to its Vigilance \n                           Score. Fitness may also determine the critters movement\n                           speed, and other factors. \n    Vigilance: A value which determines the rate or threshold of detection for\n               predators and food finding abilities. \n\n    EnviornmentalModifier: A dynamic value that adds to or removes from the Fitness Value\n    HungryModifier: A dynamic value that +/- from the Fitness Value depending on the Critters current state of hunger\n\n    FlightModifier: Flight modifier is a bonus to movement when a predator is detected\n\n    Fitness can never be lower than Zero, however having a low or No Fitness score means the Critter suffers a penalty to\n    its Vigilance score. \n\n\n\n\n    Create a Logging system which logs the following information:\n        The moment when a Critter is Born.\n        The time it takes a meal\n        The duration of time between meals\n        Everytime its Vigilance or Fitness is modified\n        Everytime it detects a predator\n\n\n\n\nShould break up the scene into quadrants or sectors?\n\nif a predator, when checking for food, broadcast a message that checks to see who\nis in its range, then, \n\n\n\nHave a movement counter and flag. \n    Set a period of time when the critter moves, basically tweening position. \n    Then make it stop, look, 'listen'. \"Listening\" will be a check for when the \n    critter is listening to a food object broadcasting its position. Think like \n    a wolf smelling for prey, or a monkey listening for grub, etc. \n\n    The broadcasting agent has a range/threshold/vigilance(?) score which determines\n    how far it can send its message. \n\n\n\nBroadcasting:\n    Everything has a broadcasting period. Broadcasting is a message system which \n    determines if Thing(s)B are within range of ThingA. Not all broadcasts are the\n    same, certain critters dont care about plant broadcasts, but the plant eating \n    critters do. ",
			"settings":
			{
				"buffer_size": 2293,
				"line_ending": "Unix",
				"name": "Use a system based on Time, having a Time-Until-Pe"
			}
		},
		{
			"contents": "<html>\n    <head>\n        <title>Title</title>\n        <style>\n            body { margin: 0; }\n            canvas { width: 100%; height: 100% }\n        </style>\n    </head>\n    <body>\n        <script src=\"js/three.min.js\"></script>\n        <script>\n            var scene, camera, renderer\n            var geometry, material, cube\n\n            function onCreate() {\n\n                scene = new THREE.Scene();\n                camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n\n                renderer = new THREE.WebGLRenderer();\n                renderer.setSize( window.innerWidth, window.innerHeight );\n                document.body.appendChild( renderer.domElement );\n\n                geometry = new THREE.BoxGeometry( 1, 1, 1 );\n                material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n                cube = new THREE.Mesh( geometry, material );\n                scene.add( cube );\n\n                camera.position.z = 5;\n\n            }\n\n            function onFrame() {\n                requestAnimationFrame( onFrame );\n                render();\n            }\n\n            function render() {\n\n                cube.rotation.x += 0.1;\n                cube.rotation.y += 0.1;\n\n                renderer.render(scene, camera);\n            };\n\n\n        </script>\n    </body>\n</html>\n",
			"settings":
			{
				"buffer_size": 1348,
				"line_ending": "Unix",
				"name": "<html>"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 373.0,
		"last_filter": "ht",
		"selected_items":
		[
			[
				"ht",
				"Set Syntax: HTML"
			],
			[
				"ja",
				"Set Syntax: JavaScript"
			],
			[
				"htm",
				"Set Syntax: HTML"
			],
			[
				"for",
				"Format: Javascript"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"jsa",
				"Set Syntax: JavaScript"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"js",
				"Set Syntax: JavaScript"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"jac",
				"Set Syntax: JavaScript"
			],
			[
				"mar",
				"Set Syntax: MultiMarkdown"
			],
			[
				"fo",
				"Format: Javascript"
			],
			[
				"p",
				"Set Syntax: Python"
			],
			[
				"forma",
				"Format: Javascript"
			],
			[
				"css",
				"Set Syntax: CSS"
			],
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"py	",
				"Set Syntax: Python"
			],
			[
				"te",
				"Set Syntax: LaTeX"
			],
			[
				"tex",
				"Set Syntax: LaTeX"
			],
			[
				"bas",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"lint",
				"Anaconda: Next lint error"
			],
			[
				"ba",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"lat",
				"Set Syntax: LaTeX"
			],
			[
				"syc++",
				"Set Syntax: C++"
			],
			[
				"syp",
				"Set Syntax: Python"
			],
			[
				"",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"ana",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"anacon lin",
				"Anaconda: Next lint error"
			],
			[
				"late",
				"Set Syntax: LaTeX"
			],
			[
				"snip",
				"Snippet: Sub Sub Section"
			],
			[
				"md",
				"Set Syntax: Markdown"
			],
			[
				"anaconda disable",
				"Anaconda: Disable linting on this file"
			],
			[
				"anaconda d",
				"Anaconda: Disable linting on this file"
			],
			[
				"dis",
				"Anaconda: Disable linting on this file"
			],
			[
				"disabl",
				"Anaconda: Disable linting on this file"
			],
			[
				"ANAconda: li",
				"Anaconda: Disable linting on this file"
			],
			[
				"PY",
				"Set Syntax: Python"
			],
			[
				"cm",
				"Set Syntax: CMake"
			],
			[
				"c",
				"Set Syntax: C++"
			],
			[
				"F",
				"Format Code"
			],
			[
				"f",
				"Format Code"
			],
			[
				"form",
				"Format Code"
			],
			[
				"code",
				"Format Code"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"For",
				"Format Code"
			],
			[
				"packare",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"JSO",
				"Set Syntax: JSON"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"snipp",
				"Snippet: Tabular"
			],
			[
				"snippet",
				"Snippet: Chapter"
			],
			[
				"sca",
				"Set Syntax: Scala Improved"
			],
			[
				"scala",
				"Set Syntax: Scala"
			],
			[
				"hask",
				"Set Syntax: Haskell"
			],
			[
				"scal",
				"Set Syntax: Scala Improved"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"disa",
				"SublimeCodeIntel: Disable Plugin"
			],
			[
				"ov",
				"Set Syntax: Objective-C++"
			],
			[
				"scala ",
				"Set Syntax: Scala Improved"
			],
			[
				"Scala",
				"Set Syntax: Scala"
			],
			[
				"Pyth",
				"Set Syntax: Python Improved"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"scaa",
				"SublimeREPL: Scala"
			],
			[
				"re",
				"SublimeREPL: Scala"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"gl",
				"Set Syntax: GLSL"
			],
			[
				"obj",
				"Set Syntax: Objective-C"
			],
			[
				"syn",
				"Set Syntax: C"
			],
			[
				"synt C",
				"Set Syntax: C"
			],
			[
				"objc",
				"Set Syntax: Objective-C"
			],
			[
				"snippet	",
				"Snippet: Do While Loop"
			],
			[
				"xm",
				"Set Syntax: XML"
			],
			[
				"repl",
				"SublimeREPL: Clojure"
			],
			[
				"pow",
				"Set Syntax: Powershell v2"
			],
			[
				"power",
				"Set Syntax: Powershell v2"
			],
			[
				"synsh",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"bat",
				"Set Syntax: Batch File"
			],
			[
				"ma",
				"Set Syntax: MATLAB"
			],
			[
				"M",
				"Set Syntax: MATLAB"
			],
			[
				"remp",
				"Package Control: Remove Package"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"symat",
				"Set Syntax: MATLAB"
			],
			[
				"in",
				"Package Control: Install Package"
			]
		],
		"width": 457.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/krbalmryde/Dropbox/Code-Projects/LTG/Wallcology/Wallcology-Critters/demos/Dino_1.mtl",
		"/Users/krbalmryde/Dropbox/Code-Projects/LTG/Wallcology/Wallcology-Critters/demos/assets/Dino_1.mtl",
		"/Users/krbalmryde/.bash_aliases",
		"/Users/krbalmryde/.bash_functions",
		"/Users/krbalmryde/Dropbox/Code-Projects/LTG/Wallcology/Wallcology-Critters/demos/load_test1.html",
		"/Users/krbalmryde/.bash_profile",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Initializers.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/python/HaloUtils.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/hlist_1.00000.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/iterations/Step6.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/GUIutils.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Listeners.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Useful.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/css/style.css",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/.gitignore",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/server/web_server.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyVis.sublime-project",
		"/Users/krbalmryde/Dropbox/Class-projects/cs524/Journal/NiftiViewer/niftiviewer.bmml",
		"/Volumes/Homer/Projects/DarkSky/data/dev/tree_parse_test.dat",
		"/Users/krbalmryde/Desktop/WebGL Export.html",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/README.txt",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/test_priviledged_app/README.md",
		"/Users/krbalmryde/Dropbox/Code-Projects/misc/JavaScript/WebGLBook/README.md",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/HaloUtils.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/Unity/RollABall/Deployed/WebGL_MiniGame/Development/WebGL_MiniGame.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/iterations/Step8.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/index.html",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/miniTreeTest.dat",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Step8.js",
		"/Users/krbalmryde/node_modules/nifti-js/README.md",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/assets/tree_31410.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/python/extractHaloTree.py",
		"/Users/krbalmryde/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/thingking/utils.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Initialize.js",
		"/Users/krbalmryde/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/thingking/httpmmap.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/tree/tree_0_0_0.dat",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/tree_parse_test.dat",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/python/exractHaloTree.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/examples/three_interactive_cubes.html",
		"/Users/krbalmryde/Dropbox/Class-projects/cs424/HW3/RightHereRightNow.github.io/APP/framework/markers/HaloController.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/config.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Scene.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Slider.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Camera.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Controls.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Epoch.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Renderer.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Container.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/index_require.html",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/tree679582.dat",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/python/hlist_1.0.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/iterations/Step7.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/examples/HaloWorld.js",
		"/Users/krbalmryde/Dropbox/Class-projects/cs424/projects/SweetHomeChicago/chicago.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/Step7.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/iterations/Step5.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/app/examples/three.js webgl - multiple views.html",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/README.md",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/src/Step6.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis-bc/javascript/js/app/iterations/Step6.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis-bc/.gitignore",
		"/Users/krbalmryde/Dropbox/Class-projects/cs424/projects/SweetHomeChicago/home.html",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/src/Step7.js",
		"/Users/krbalmryde/Dropbox/Class-projects/cs424/projects/SweetHomeChicago/index.html",
		"/Users/krbalmryde/Dropbox/Class-projects/cs424/HW1/chicago.js",
		"/Users/krbalmryde/Dropbox/Class-projects/cs424/HW1/step-7.html",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/tree/locations.dat",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/tree679582.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/tree679582.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/#tree679582.dat",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/python/vtkExtractHaloContents.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/python/vtk/vtkDarkSkyParticles.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/extras/ParticleGeometry.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/python/PrepProcDMH.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/Path257.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/biggerTreeTest.dat",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/utils/Tree675571.js",
		"/Users/krbalmryde/.profile",
		"/Users/krbalmryde/.bashrc",
		"/Users/krbalmryde/.bash_rc",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/biggerTreeTest.json",
		"/Users/krbalmryde/Downloads/sample/index.html",
		"/Users/krbalmryde/Downloads/download.html",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/pretty_miniTreeTest.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/src/Step5.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/js/utils/HaloTree.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/python/exampleSDF.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/index.html",
		"/Users/krbalmryde/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/python/vtk/vtkDarkSkyUtilities.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/dev/miniTreeTest.dat.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/tree/untitled.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/hlist_0.99000.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/hlist_1.00000.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/outlist/out_15.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/hlist_0.12000.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/hlist_0.15000.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/json/pretty_hlist_0.15000.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/json/hlist_0.15000.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/rockstar.cfg",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/outlist/out_8.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/outlist/out_9.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/outlist/out_10.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/vtkDarkSkyUtilities.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/exampleSDF.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/Step5.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/PrepProcDMH.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/HaloUtils.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/javascript/assets/foo.json",
		"/Users/krbalmryde/.ipython/profile_default/startup/00-profile.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/Step4.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/Step3.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/js/utils/Utils.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/Step2.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/hlist_0.13000.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/vtkDarkSkyHalos.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/FilterCoords.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/pretty_Halo_257.0_tAll.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/pretty_Halo_257.0_t12.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/aggregate_Halo_257_tALL.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/extractHaloAndParticles.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/Halo_257.0_t12.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/Halo_257.0_t100.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t99.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t15.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t16.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t17.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t18.json"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"*.js",
			"",
			".",
			"",
			"chicago_health.json",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Vigilence",
			"url",
			"Dino_1",
			"psd",
			"0.2",
			"assets/",
			"Dino_TallyShapeBump.psd",
			"assets/",
			"png",
			"controls",
			"// console.log(camera, light)",
			"jpg",
			"r + ",
			"initJSONCritter",
			"0.5",
			"255",
			"4",
			"../",
			"                 ",
			"             ",
			"sphereGroup",
			"id",
			"depth",
			"fromTheDepths",
			"linesGroup",
			"sphereGroup.getObjectByName(+id).visible = true;",
			"sphereGroup.get",
			"get",
			"fromTheDepths",
			"createPathLine",
			"intoTheVoid",
			"sub",
			"halo.",
			"*0.001",
			"scale",
			"createHaloLineGeometry",
			"haloFocusBox",
			"subHalos",
			"enableSelection",
			",",
			"this",
			"treeNum",
			"661976",
			"#tree 661976",
			"#tree",
			"679582   ",
			"679582",
			"Dynamic",
			"linesMesh",
			"createBufferPathLine",
			"parent_node",
			"createPathLine",
			"createHaloLineGeometry",
			"linesMesh",
			"add_vertex",
			"positions",
			"createSphereGeometry",
			"Scene",
			"__animateSlider",
			"period",
			"createSphereGeometry",
			"resetGlobalStructures",
			"_materialsByPeriod",
			" ",
			"50",
			"intoTheVoid",
			"halo",
			"rs",
			"rs1",
			"1",
			"; {",
			"createPathLine",
			"lineMeshProp",
			"lineMeshPop",
			"lineMeshProp.spline",
			"period",
			"halo.desc_id",
			"__traversed",
			"createHaloLineGeometry",
			"lineMeshProp.splineGeometry",
			"meshComponents",
			"splineGeometry",
			"spline.",
			"createSphereGeometry",
			"!==",
			"__resetView",
			"__goToHead",
			"initCamera",
			"halo.time",
			"createSphere",
			"resetGlobalStructures",
			"createHaloSphereGeometry",
			"createSphere",
			"createHalo",
			"create",
			"createHaloGeometry",
			"renderer",
			"period",
			"prevTarget",
			"createHaloGeometry",
			"createSphere2",
			"true",
			"HaloSelect",
			"resetHaloBranchs",
			"config.scale",
			"haloSelectionBox",
			"__updateData",
			"tweenToPosition",
			"intoTheAbyss",
			"GUIcontrols.prototype.__goTo",
			"goTo",
			"jumpTo",
			"min",
			"HaloLUT",
			" Lines",
			"\\sLines",
			"Display ",
			"/*",
			"Turn Halo",
			"guiBox",
			"haloStats",
			"if (halo)",
			"updateAllTheGeometry",
			"displayHalos()",
			"displayHalos();",
			"toHead",
			"HaloSpheres[id]",
			"__"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			",",
			". Neuroimaging",
			" neuroimaging",
			"neuroimaging",
			"Neuroimaging",
			"hub",
			"Hub",
			"\"district\":",
			"community",
			"\"side\":\"central\",(\"slug\":)(\"rogers_park\"|\"loop\")",
			",\"side\":\"central\",$1",
			"secondary",
			"\"secondary\"",
			"\"neighborhood\"",
			"\"community\"",
			"\"side\"",
			"\n,\"",
			";\\n",
			"\"\"\"\n",
			"\n",
			"\n\n",
			"\n",
			"\n\n",
			"\n",
			"\n\n",
			"",
			"\n",
			"\\n",
			"\n",
			"",
			"\n",
			"\n\n\n",
			"\n",
			"",
			"\n",
			"!Audio\\DING.wav,\"0,0,0\",700",
			"/",
			"",
			"2",
			"",
			".wav",
			"2.wa",
			"	",
			"    ",
			"\\t",
			" "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "demos/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11941,
						"regions":
						{
						},
						"selection":
						[
							[
								1128,
								1128
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 184.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2293,
						"regions":
						{
						},
						"selection":
						[
							[
								1541,
								1541
							]
						],
						"settings":
						{
							"auto_name": "Use a system based on Time, having a Time-Until-Pe",
							"spell_check": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 339.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1348,
						"regions":
						{
						},
						"selection":
						[
							[
								1185,
								1195
							]
						],
						"settings":
						{
							"auto_name": "<html>",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 35.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 158.0
	},
	"output.find_results":
	{
		"height": 126.0
	},
	"pinned_build_system": "",
	"project": "Wallcology.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"init",
				"javascript/js/app/Initializers.js"
			],
			[
				"halo",
				"javascript/js/app/HaloUtils.js"
			],
			[
				"hal",
				"python/HaloUtils.py"
			],
			[
				"usef",
				"javascript/js/app/Useful.js"
			],
			[
				"iterations",
				"DarkSkyVis/javascript/js/app/iterations/Step6.js"
			],
			[
				"in",
				"javascript/js/app/Initializers.js"
			],
			[
				"lis",
				"javascript/js/app/Listeners.js"
			],
			[
				"gui",
				"javascript/js/app/GUIutils.js"
			],
			[
				"ini",
				"javascript/js/app/Initializers.js"
			],
			[
				"sty",
				"javascript/css/style.css"
			],
			[
				"list",
				"javascript/js/app/Listeners.js"
			],
			[
				"halojs",
				"javascript/js/app/HaloUtils.js"
			],
			[
				"ha",
				"python/HaloUtils.py"
			],
			[
				"step8",
				"javascript/js/app/iterations/Step8.js"
			],
			[
				"li",
				"javascript/js/app/Listeners.js"
			],
			[
				"ste9",
				"javascript/js/app/Step9.js"
			],
			[
				"st",
				"javascript/css/style.css"
			],
			[
				"html",
				"javascript/index.html"
			],
			[
				"tree_",
				"data/rockstar/tree/tree_0_0_0.dat"
			],
			[
				"use",
				"javascript/js/app/Useful.js"
			],
			[
				"sc",
				"javascript/js/app/Scene.js"
			],
			[
				"ca",
				"javascript/js/app/Camera.js"
			],
			[
				"sli",
				"javascript/js/app/Slider.js"
			],
			[
				"conf",
				"javascript/js/config.js"
			],
			[
				"con",
				"javascript/js/app/Container.js"
			],
			[
				"ren",
				"javascript/js/app/Renderer.js"
			],
			[
				"sce",
				"javascript/js/app/Scene.js"
			],
			[
				"tree",
				"data/dev/tree679582.dat"
			],
			[
				"ste",
				"javascript/js/app/iterations/Step7.js"
			],
			[
				"us",
				"javascript/js/app/Useful.js"
			],
			[
				"index",
				"javascript/index.html"
			],
			[
				"inde",
				"javascript/index.html"
			],
			[
				"step5",
				"javascript/js/app/iterations/Step5.js"
			],
			[
				"rea",
				"DarkSkyVis/README.md"
			],
			[
				"big",
				"data/dev/biggerTreeTest.dat"
			],
			[
				"bigg",
				"data/dev/biggerTreeTest.json"
			],
			[
				"step",
				"javascript/src/Step6.js"
			],
			[
				"mi",
				"data/dev/miniTreeTest.dat"
			],
			[
				"pre",
				"data/dev/pretty_miniTreeTest.json"
			],
			[
				"vtku",
				"python/vtk/vtkDarkSkyUtilities.py"
			],
			[
				"min",
				"data/dev/miniTreeTest.dat"
			],
			[
				"hlist_0.99",
				"data/rockstar/hlists/hlist_0.99000.list"
			],
			[
				"hlist_1",
				"data/rockstar/hlists/hlist_1.00000.list"
			],
			[
				"hl",
				"data/rockstar/hlists/hlist_0.12000.list"
			],
			[
				"halou",
				"python/HaloUtils.py"
			],
			[
				"re",
				"DarkSkyVis/README.md"
			],
			[
				"p",
				"DarkSkyPy/PrepProcDMH.py"
			],
			[
				"vtk",
				"DarkSkyPy/vtkDarkSkyUtilities.py"
			],
			[
				"step4",
				"DarkSkyJs/src/Step4.js"
			],
			[
				"utils.js",
				"DarkSkyJs/js/utils/Utils.js"
			],
			[
				"ex",
				"DarkSkyPy/exampleSDF.py"
			],
			[
				"hli",
				"DarkSkyVis/data/rockstar/hlists/hlist_0.12000.list"
			],
			[
				"hl1.",
				"DarkSkyVis/data/rockstar/hlists/hlist_1.00000.list"
			],
			[
				"ext",
				"DarkSkyPy/extractHaloAndParticles.py"
			],
			[
				"ut",
				"DarkSkyJs/js/Utils.js"
			],
			[
				"step3a",
				"DarkSkyJs/src/Step3a.js"
			],
			[
				"dra",
				"DarkSkyJs/src/example_drawCalls.js"
			],
			[
				"step1",
				"DarkSkyJs/src/Step1.js"
			],
			[
				"utils",
				"DarkSkyJs/js/Utils.js"
			],
			[
				"read",
				"README.md"
			],
			[
				"utili",
				"darksky/utils/vtkDarkSkyUtilities.py"
			],
			[
				"par",
				"darksky/vtkDarkSkyParticles.py"
			],
			[
				"vtkdark",
				"darksky/vtkDarkSkyFlow.py"
			],
			[
				"darkskyt",
				"darksky/vtkDarkSkyTime.py"
			],
			[
				"",
				"darksky/VTKDarkSkyFlow.py"
			],
			[
				"u",
				"darksky/utils/DarkSkyUtilities.py"
			],
			[
				"str",
				"darksky/VTKDarkSky-StreamLines.py"
			],
			[
				"scivis",
				"cs594/SciVis2015/Paper/SciVis.inc"
			],
			[
				"vtkdar",
				"cs594/SciVis2015/src/VTKDarkSkyHalos.py"
			],
			[
				"scivis.inc",
				"cs335/.metadata/.plugins/com.python.pydev.analysis/python_v1_bm109oo8jsa5gnqmc06ekl12p/v1_indexcache/include_server.include_analyzer_5hwz.v1_indexcache"
			],
			[
				"vtkd",
				"cs594/SciVis2015/src/VTKDarkSky.py"
			],
			[
				"star",
				"cs524/StarReport/StarReport.tex"
			],
			[
				"starr",
				"cs524/StarReport/StarReport.inc"
			],
			[
				"project4",
				"ISTA555/YouAreWhatYouEat/src/Project4.py"
			],
			[
				"ista555",
				"ISTA555/AnalyzeHappiness/Project1.py"
			],
			[
				"topic8",
				"cs594/topic8/MyNetCDF.py"
			],
			[
				"hlist_0.65000.list",
				"cs594/SciVis2015/data/ds14_scivis_0128/rockstar/hlists/hlist_0.65000.list"
			],
			[
				"sen",
				"cs524/Journal/TextRendering/src/data/SentiWordNet_3.0.0_20130122.txt"
			],
			[
				"topic",
				"cs594/topic5/Topic5.py"
			],
			[
				"nif",
				"cs594/niiPy/src/NiftiVTK.py"
			],
			[
				"myne",
				"cs594/topic7/MyNetCDF.py"
			],
			[
				"hw10",
				"cs301/HW10/HW10.cpp"
			],
			[
				"cy",
				"cs594/topic5/cylinder.vtk"
			],
			[
				"niipy",
				"cs594/niiPy/niftiRenderer.py"
			],
			[
				"rend",
				"cs594/niiPy/vtk_render.py"
			],
			[
				"hw1.t",
				"ISTA516/HW1/hw1.tex"
			],
			[
				"main.j",
				"cs424/HW3/RightHereRightNow.github.io/javascripts/main.js"
			],
			[
				"basic",
				"cs424/Notes/basic.html"
			],
			[
				"topo",
				"cs424/HW2/bicyclerace.github.io/webapp/js/external-libraries/topojson.v1.min.js"
			],
			[
				"nc",
				"cs594/topic2/NetCDF_dump.txt"
			],
			[
				"syn",
				"cs524/Journal/BookVolRen/src/SynestheticRenderer.py"
			],
			[
				"data/one-grams.txt",
				"ISTA555/YouAreWhatYouEat/data/one-grams.txt"
			],
			[
				"project1",
				"ISTA555/AnalyzeHappiness/Project1.py"
			],
			[
				"useful",
				"ISTA555/YouAreWhatYouEat/src/useful.py"
			],
			[
				"lab1",
				"cs251/Lab13/lab13.txt"
			],
			[
				"overb",
				"cs251/HW1/Prog1Overboard.cpp"
			],
			[
				"dic",
				"cs251/HW5/HW5/dictionary.txt"
			],
			[
				"uber",
				"cs424/HW3/RightHereRightNow.github.io/APP/framework/markers/UberMarker.js"
			],
			[
				"yelp",
				"cs424/HW3/RightHereRightNow.github.io/APP/framework/markers/YelpMarker.js"
			],
			[
				"cta",
				"cs424/HW3/RightHereRightNow.github.io/APP/framework/markers/CTAMarker.js"
			],
			[
				"databa",
				"cs424/HW3/RightHereRightNow.github.io/APP/data/database.js"
			],
			[
				"sol",
				"cs251/lab10/Solution.cpp"
			],
			[
				"solu",
				"cs251/lab10/Solution.cpp"
			],
			[
				"uiweath",
				"cs424/HW2/bicyclerace.github.io/webapp/js/controllers/ui/UIWeatherViewController.js"
			],
			[
				"uiwea",
				"cs424/HW2/bicyclerace.github.io/webapp/styles/UIWeatherViewController.css"
			],
			[
				"us.",
				"cs424\\Notes\\Choropleth\\us.json"
			],
			[
				"uk",
				"cs424\\HW1\\uk.json"
			],
			[
				"chi",
				"cs424\\HW1\\data\\chicago_health2.json"
			],
			[
				"dataf",
				"cs424\\HW1\\backup\\dataFix.html"
			],
			[
				"chica",
				"cs424\\HW1\\data\\chicago_health.json"
			],
			[
				"chea",
				"cs424\\HW1\\chicago_health.json"
			],
			[
				"chicagogeocrs84",
				"cs424\\HW1\\data\\chicagoGEOcrs84.json"
			],
			[
				"home4",
				"cs533/HW4/HW4/homework4.cpp"
			],
			[
				"homewo5",
				"cs533/HW5/HW5/homework5.cpp"
			],
			[
				"detec",
				"ISTA516/HW5/js/Detector.js"
			],
			[
				"1",
				"ISTA516/HW5/1st.html"
			],
			[
				"sort",
				"cs227/SortTest.java"
			],
			[
				"home",
				"cs533/HW3/homework3.cpp"
			],
			[
				"hw1",
				"cs533/HW1/hw1.cxx"
			],
			[
				"demo",
				"cs533/HW1/paintdemo_mac/demo.cxx"
			],
			[
				"geo",
				"ISTA555/Docs/twitter_code/GeoTag.scala"
			],
			[
				"emo",
				"ISTA555/YouAreWhatYouEat/data/Emoji-FreqDist.txt"
			],
			[
				"emoj",
				"ISTA555/YouAreWhatYouEat/data/etc/emoji-codes.txt"
			],
			[
				"project2",
				"ISTA555/GoodMovieOrBad/docs/project2_key.py"
			],
			[
				"project4.",
				"ISTA555/YouAreWhatYouEat/src/Project4.py"
			],
			[
				"proj2",
				"ISTA555/GoodMovieOrBad/docs/project2_key.py"
			],
			[
				"project4re",
				"ISTA555/YouAreWhatYouEat/docs/Project 4 Report.txt"
			],
			[
				"proj4",
				"ISTA555/YouAreWhatYouEat/src/Project4.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Dropbox/Code-Projects/LTG/Wallcology/Wallcology.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 219.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
